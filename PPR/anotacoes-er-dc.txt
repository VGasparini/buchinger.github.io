============================================
PROJETO 1 

Observações Gerais E.R: (2,7) -> 9.2
(OK) - Faltou a data de início e de término das inscrições para o evento,
faltou ainda o número de vagas, valor da inscrição, email do pessoal
que contabiliza frequencia e condutores do evento (palestrante,
instrutor, apresentador);
(OK) Coordenador tem mais atributos: endereço, telefone, grupo ou entidade e email.
(OK) Participantes ou clientes ficaram sem alguns atributos importantes: endereço, número da conta bancária.
(OK) Faltou criar uma entidade ou relacionamento de cancelamento de evento
com os seguintes atributos: data do cancelamento, justificativa, autor
do cancelamento do evento;
(OK) Créditos não é uma entidade mas sim um atributo de cliente.
(OK) Cuidar com os 'relacionamentos-ações': as ações não são modeladas necessariamente como um relacionamento (exemplo: administrador->altera->evento). Isto não representa uma relação entre as duas entidades.
(OK) Certificados tambem não são uma entidade... eles vao aparecer do relacionamento de cliente e evento. Se um cliente comparece a um evento já sabemos que ele merece um certificado para aquele evento. Então esta simples representação de relação entre cliente e evento já é suficiente para poder construir um certificado.

Observações Gerais D.C: (3,5) -> 9.7
(OK) Faltaram os dados mencionados acima para Evento, Usuário e Coordenador.
(OK) Neste diagrama usuário aparece com um atributo crédito - OK (mas no ER não);
(-) É o coordenador que tem uma lista de eventos?
----> Acredito que seria melhor se invertesse: o evento que possui um ou mais coordenadores... ou que mantenha este registro nas duas classes.
----> Como vamos saber qual evento cada usuário esta cadastrado se aparentemente não há um atributo de vínculo entre eles?
(OK) seria melhor representar os eventos, os usuários, os coordenadores e os administradores como listas em uma classe principal do sistema.
(OK) Criar classe para cancelamento de eventos ou então adiconar os campos necessários em evento (justificativa e autor do cancelamento basicamente).
* Está bem melhor, com os atributos e métodos mais bem especificados
* Ficou boa a nota com as três observações!


============================================
PROJETO 2

Observações Gerais E.R: (5,4) -> 9.0
(OK) Reservista não precisa ser representado porque seus dados serão conferidos no SIGA. Entretanto, Vocês podem representá-lo
e colocar uma nota dizendo que esta entidade faz parte do siga 
e não do sistema de vocês. Além disso, será necessário que a matrícula do reservista seja um novo atributo na entidade Reserva (para saber para quem é a reserva).
(OK) Como a entidade reservista vai sair, então vai sair também
o relacionamento reserva, ficando apenas bolsista -> faz -> reserva
(OK) A reserva não precisa ter uma data também?? Isso será importante... pode registrar tanto a data em que foi feita a reserva (não tão importante) quanto a data para a qual um ambiente está reservado (importante!!)
(OK) Olhar cardinalidade (numeros):
(OK)++ um bolsista -> faz -> uma e somente uma reserva??? (ele não pode realizar mais de uma reserva para os reservistas?)
(OK)++ uma reserva -> é feita -> por um ou 'n' bolsistas?? (não seria apenas um)
(OK) Em Bolsista ficou "Atributo_1"
(OK) Relatórios não são uma entidade... são apenas um objeto, um documento que é produzido para o administrador olhar. Logo a entidade Relatórios e a relação gera podem sair.
(OK) Administrador não precisa ter a relação "administra" com bolsistas. As operações de editar, criar e excluir não são indicadas aqui.

REVISÃO
- O administrador tem um atributo dias de antecedencia? isso deveria ser um atributo do sistema (uma entidade sistema que possui este atributo)
- Por que o administrador tem um cpf do bolsista como atributo?
- Se dias da semana, horario de entrada e horario de saida indicam horários de trabalho do bolsista, então seria melhor indicar como atributo multivalorado e depois indicar eles
 (bolsista pode entrar em horários diferentes em dias diferentes)


Observações Gerais D.C: (5,4) -> 8.5
(OK) O reservista pode até ser reproduzido aqui também mas deve ser identificado que ele faz parte do SIGA e não do sistema (mais para frente veremos melhor como podemos identificar isto, por enquanto poderia usar uma nota para dizer isto)
(OK) Faltou identificar uma entidade para o sistema que possui os registros dos Bolsistas, das Reservas (vetor ou listas) e do Administrador.
(OK) Na classe reserva lembrar de adicionar os novos atributos da reserva indicadas nas observações sobre o diagrama E.R.
(OK) Por que tem aquela nota falando "Acesso ao banco de dados"??
todos os dados do sistema estarão no banco de dados (posteriormente).
(OK) * gets e sets não precisam ser representados... podem, mas não há necessidade. A menos que forem diferentes (por exemplo, recebem dois parametros para setar apenas um valor, ou vice versa).

REVISÃO:
+ ficou bem bom, mas...:
- diasDeAntecedencia deveria ser um atributo do sistema (DemoSistema) e não do administrador;
- o que é o atributo cpfBolsista em Administrador?
(-)* não colocaram os parâmetros necessários para cada método.


============================================
PROJETO 3

Observações Gerais E.R: (7,6) -> 9.8
(OK) Funcionários ficaram sem telefone
(OK) o pagamento deveria estar atrelado a uma consulta,
a um histórico ou a um agendamento... da forma como ficou
não é possível identificar qual o motivo do pagamento
(está pagando por qual serviço prestado?)
- no histórico deveria ter algum atributo para discriminação
do que foi realizado na consulta.
- um histórico deve ser alterado por pelo menos um dentista (e não 0)
(OK) auxiliares gerenciam um estoque, mas neste caso isto identifica uma ação e não uma relação entre o estoque e os auxiliares... ou seja, a relação gerenciam não deveria existir
(OK) mesma coisa para gerente e as operações que ele realiza
(OK) Notem que o estoque é composto por 0 ou vários itens que tem os seus dados importantes: nome, quantidade, data e valor de compra. Esses dados são importantes.
(OK) na descrição do problema menciona que um procedimento realizado pode usar zero ou n materiais do estoque. Logo, faltou adicionar uma entidade para indicar um procedimento (ou usar o histórico no lugar) e relacionar com os itens do estoque.

REVISÃO:
+ também está bem bom, mas...:
- O relacionamento ATENDEM está me parecendo suspeito: 
-- ATENDEM - uma secretária atende um cliente; ok, mas isso vai ser registrado no sistema? caso sim, ok; mas geralmente um atendimento/conversa, não gera um novo registro no sistema então estas duas entidades não estão vinculadas;


Observações Gerais D.C: (4,4) -> 8.5
(OK) Para onde foram os atributos do paciente... sumiram!! (a grande maioria)
Não precisa separar cliente de cadastro... são a mesma entidade
(OK) O mesmo aconteceu para o dentista, a secretária, o auxiliar e o gerente
(seria possível usar o conceito de generalização para todos os funcionários
adicionando os campos em comum)
(OK) O estoque mostra que tem itens... mas os itens são somente strings.
Na verdade os itens tem outros atributos conforme mencionado anteriormente
(OK) E a classe histórico para onde foi??
(OK) E a classe agendamento??

REVISÃO:
+ ficou bem melhor do que antes, mas:
- alguns relacionamentos (setas) utilizadas estão incorretas [ex: consulta -> material, dentista->consultas; seria outra seta];
- alguns métodos estão estranhos também, mas talvez isso vai ficar mais claro no segundo diagrama que vocês irão fazer usando o modelo em camadas.



============================================
PROJETO 4
Apenas segunda entrega (não foi realiza a primeira entrega desta etapa)

Observações Gerais E.R: (6.0)
* Muitos campos importantes faltando
- Faltou matrícula dos funcionarios
- Faltou o campo rg para os clientes
- O banco disponibiliza um valor de limite extra para os clientes e um limite de movimentação diário.
Onde foi modelado isto? São dados importantes.
- E o saldo das contas? Não há campo para isto.
- Como o sistema vai manter o cadastro de uma transferência bancária? Não tem campos
- O percentual de juros e tarifas sobre as contas serão registrados como? Não tem campo
- Como vão manter o histórico das operações?


Observações Gerais D.C: 6.0
+ Colocaram as operações do sistema
- Esconderam/eliminaram a maioria dos atributos das classes de algumas entidades do sistema... por quê?
- Não existe mais classe Cliente?
- Deveria ter uma classe principal para manter os dados/registros dos clientes, funcionarios
e do histórico das operações;
- Muitos campos importantes não apareceram (foram omitidos ou excluidos) neste diagrama.
Ela é quase uma extenção do diagrama ER mas, comparando os dois diagramas, neste caso,
muitos dados que lá apareciam, não estão aparecendo aqui.



===========================